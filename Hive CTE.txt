USE test;

SET hive.execution.engine=spark;


WITH studentBaseDuplicate AS(SELECT distinct * from StudentBase),
      
      StudentBaseDropNull AS (SELECT * from StudentBaseDuplicate where isnotnull(studentUniqueId) AND isnotnull(birthDate) AND isnotnull(firstName) AND isnotnull(lastSurname)),

      StudentBaseValidation AS (SELECT * FROM StudentBaseDropNull WHERE StudentBaseDropNull.sourceSystemDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/SourceSystemDescriptor')),

      SB AS (Select Operation,studentUniqueId,personId,sourceSystemDescriptor,birthCity,birthCountryDescriptor,birthDate,birthInternationalProvince,birthSexDescriptor,birthStateAbbreviationDescriptor,citizenshipStatusDescriptor,dateEnteredUS,firstName,generationCodeSuffix,lastSurname,maidenName,middleName,multipleBirthStatus,personalTitlePrefix,tx_adultPreviousAttendanceIndicator,tx_localStudentID,tx_studentID,named_struct("personId",personId,"sourceSystemDescriptor",sourceSystemDescriptor) as personReference from StudentBaseValidation),
 
      StudentIdentificationDocumentDuplicate AS (SELECT distinct * from StudentIdentificationDocument),

      StudentIdentificationDropNull AS (SELECT * from StudentIdentificationDocumentDuplicate where isnotnull(studentUniqueId) AND isnotnull(identificationDocumentUseDescriptor) AND isnotnull(personalInformationVerificationDescriptor)),

      StudentIdentificationDocumentValidation AS (SELECT * FROM StudentIdentificationDropNull WHERE StudentIdentificationDropNull.personalInformationVerificationDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/PersonalInformationVerificationDescriptor')),

      StudentIdentificationDocumentValidations AS (SELECT * FROM StudentIdentificationDocumentValidation  WHERE StudentIdentificationDocumentValidation.identificationDocumentUseDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/IdentificationDocumentUseDescriptor')),

      SID as (Select studentUniqueId,collect_set(named_struct("identificationDocumentUseDescriptor",identificationDocumentUseDescriptor,"personalInformationVerificationDescriptor",personalInformationVerificationDescriptor,"issuerCountryDescriptor",issuerCountryDescriptor,"documentExpirationDate",documentExpirationDate,"documentTitle",documentTitle,"issuerDocumentIdentificationCode",issuerDocumentIdentificationCode,"issuerName",issuerName)) as identificationDocuments from StudentIdentificationDocumentValidation GROUP BY studentUniqueId),

      StudentOtherNamesDuplicate AS (SELECT distinct * from StudentOtherNames),
   
      StudentOtherNamesDropNull AS (SELECT * from StudentOtherNamesDuplicate where isnotnull(studentUniqueId) AND isnotnull(otherNameTypeDescriptor) AND isnotnull(firstName) AND isnotnull(lastSurname)),

      StudentOtherNamesValidation AS (SELECT * FROM StudentOtherNamesDropNull WHERE StudentOtherNamesDropNull.otherNameTypeDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/OtherNameTypeDescriptor')),

      SON AS (Select studentUniqueId,collect_set(named_struct("otherNameTypeDescriptor",otherNameTypeDescriptor,"firstName",firstName,"generationCodeSuffix",generationCodeSuffix,"lastSurname",lastSurname,"middleName",middleName,"personalTitlePrefix",personalTitlePrefix)) as otherNames from StudentOtherNamesValidation GROUP BY studentUniqueId),

      StudentPersonalIdentificationDocumentDuplicate AS (SELECT distinct * from StudentPersonalIdentificationDocument),

      StudentPersonalIdentificationDropNull AS (SELECT * from StudentPersonalIdentificationDocumentDuplicate where isnotnull(studentUniqueId) AND isnotnull(identificationDocumentUseDescriptor) AND isnotnull(personalInformationVerificationDescriptor)),

      StudentPersonalIdentificationDocumentValidation AS (SELECT * FROM StudentPersonalIdentificationDropNull WHERE StudentPersonalIdentificationDropNull.personalInformationVerificationDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/PersonalInformationVerificationDescriptor')),

      StudentPersonalIdentificationDocumentValidations AS (SELECT * FROM StudentPersonalIdentificationDocumentValidation  WHERE StudentPersonalIdentificationDocumentValidation.identificationDocumentUseDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/IdentificationDocumentUseDescriptor')),
    
      SPID as (Select studentUniqueId,collect_set(named_struct("identificationDocumentUseDescriptor",identificationDocumentUseDescriptor,"personalInformationVerificationDescriptor",personalInformationVerificationDescriptor,"issuerCountryDescriptor",issuerCountryDescriptor,"documentExpirationDate",documentExpirationDate,"documentTitle",documentTitle,"issuerDocumentIdentificationCode",issuerDocumentIdentificationCode,"issuerName",issuerName)) as personalIdentificationDocuments from StudentPersonalIdentificationDocumentValidations GROUP BY studentUniqueId),
      
      StudentVisauDuplicate AS (SELECT distinct * from StudentVisas),

      StudentVisaDropNull AS (SELECT * from StudentVisauDuplicate where isnotnull(studentUniqueId)  AND isnotnull(visaDescriptor)),
 
      StudentVisaValidation AS (SELECT * FROM studentvisas WHERE studentvisas.visaDescriptor IN(select description from Descriptors where namespace like 'uri://ed-fi.org/VisaDescriptor')),

      SV as (Select studentUniqueId,collect_set(named_struct("visaDescriptor",visaDescriptor)) as visas from StudentVisaValidation GROUP BY studentUniqueId),

      studentjoin AS (SELECT SB.studentUniqueId, personReference,birthCity,birthCountryDescriptor,birthDate,birthInternationalProvince,birthSexDescriptor,birthStateAbbreviationDescriptor,citizenshipStatusDescriptor,dateEnteredUS,firstName,generationCodeSuffix,identificationDocuments,lastSurname,maidenName,middleName,multipleBirthStatus,otherNames,personalIdentificationDocuments,visas FROM SB LEFT JOIN SID ON SB.studentUniqueId =SID.studentUniqueId LEFT JOIN SON ON SB.studentUniqueId =SON.studentUniqueId LEFT JOIN SPID ON SB.studentUniqueId =SPID.studentUniqueId LEFT JOIN SV ON SB.studentUniqueId =SV.studentUniqueId),
  
      Final AS (SELECT named_struct("studentUniqueId",studentUniqueId, "personReference",personReference,"birthCity",birthCity,"birthCountryDescriptor",birthCountryDescriptor,"birthDate",birthDate,"birthInternationalProvince",birthInternationalProvince,"birthSexDescriptor",birthSexDescriptor,"birthStateAbbreviationDescriptor",birthStateAbbreviationDescriptor,"citizenshipStatusDescriptor",citizenshipStatusDescriptor,"dateEnteredUS",dateEnteredUS,"firstName",firstName,"generationCodeSuffix",generationCodeSuffix,"identificationDocuments",identificationDocuments,"lastSurname",lastSurname,"maidenName",maidenName,"middleName",middleName,"multipleBirthStatus",multipleBirthStatus,"otherNames",otherNames,"personalIdentificationDocuments",personalIdentificationDocuments,"visas",visas) as value from studentjoin)

      SELECT value FROM Final;
      
     

     
